def sum_lists(a: list, b: list) -> list:
"""this function adds the elements of two lists with the same index.
If one list is longer than the other, it adds 0 to these elements.

Args:_description_
a (list): first list of integers or floats
b (list): second list of integers or floats

Returns:
list: list of summed elements with the same index
"""
max_len = max(len(a), len(b))
a.extend([0] * (max_len - len(a)))
b.extend([0] * (max_len - len(b)))
return [sum(x) for x in list(zip(a,b))]


def count_evens(num_list):
  return [num for num in num_list if num%2==0 ]

def filter_words(word_list):
    return [word for word in word_list if 4<len(word)<8]

def count_chars(text):
result=""
strlist = mystr.split(")")
for i in text:
for j in range(len(i)):
if i[j]=="(":
result+=(i[(j+1):])
return len(result))

# wersja Kacpra - wydaje sie bardziej klarowna i lepsza dla dalszej rekurencji
def count_chars_between(text:str, char_start:str='(', char_end:str=')'):
                        
    should_i_count = False
    counter = 0

    for char in text:
        if char == char_end:
            should_i_count = False

        if should_i_count:
            counter +=1

        if char == char_start:
            should_i_count = True

    return counter


